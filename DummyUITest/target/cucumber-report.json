[
  {
    "line": 2,
    "elements": [
      {
        "line": 4,
        "name": "Checking the table is present and consist of some columns with a specified names",
        "description": "",
        "id": "check-the-table;checking-the-table-is-present-and-consist-of-some-columns-with-a-specified-names",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 32781842100,
              "status": "passed"
            },
            "line": 5,
            "name": "I am on the Dummy sample rest api web page",
            "match": {
              "location": "CheckDummyTableStepDefinitions.openDummyMainPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 33589000,
              "status": "passed"
            },
            "line": 6,
            "name": "the table with some examples is present",
            "match": {
              "location": "CheckDummyTableStepDefinitions.the_table_with_request_examples_is_present()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 193604600,
              "status": "passed"
            },
            "line": 7,
            "name": "the table contains specified columns \"#, Route, Method, Type, Full route, Description, Details\"",
            "match": {
              "arguments": [
                {
                  "val": "#, Route, Method, Type, Full route, Description, Details",
                  "offset": 38
                }
              ],
              "location": "CheckDummyTableStepDefinitions.i_can_see_web_page_with_specified_columns(String\u003e)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 396103300,
              "status": "passed"
            },
            "line": 8,
            "name": "the contents of the Method column contains a correct data \"GET, PUT, POST, DELETE\"",
            "match": {
              "arguments": [
                {
                  "val": "GET, PUT, POST, DELETE",
                  "offset": 59
                }
              ],
              "location": "CheckDummyTableStepDefinitions.the_contents_of_the_Method_column_contains_a_correct_data(String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 332641600,
              "status": "passed"
            },
            "line": 9,
            "name": "the contents of the Type column contains a \"JSON\" text",
            "match": {
              "arguments": [
                {
                  "val": "JSON",
                  "offset": 44
                }
              ],
              "location": "CheckDummyTableStepDefinitions.the_contents_of_the_Type_column_contains_a_correct_data(String\u003e)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 21,
        "name": "Checking the table is present and consist of some columns names",
        "description": "",
        "id": "check-the-table;checking-the-table-is-present-and-consist-of-some-columns-names;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3218793900,
              "status": "passed"
            },
            "line": 12,
            "name": "I am on the Dummy sample rest api web page",
            "match": {
              "location": "CheckDummyTableStepDefinitions.openDummyMainPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3643716000,
              "status": "passed"
            },
            "line": 13,
            "name": "I click on Details link in \u0027Details\u0027 column on row with some \"Get all employee data\"",
            "match": {
              "arguments": [
                {
                  "val": "Get all employee data",
                  "offset": 62
                }
              ],
              "location": "CheckDummyTableStepDefinitions.i_click_on_Details_link_in_Details_column(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 34278400,
              "status": "passed"
            },
            "line": 14,
            "name": "the table with some examples is present",
            "match": {
              "location": "CheckDummyTableStepDefinitions.the_table_with_request_examples_is_present()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 309248800,
              "status": "passed"
            },
            "line": 15,
            "name": "the table contains specified columns \"#, Route, Method, Sample Json, Results\"",
            "match": {
              "arguments": [
                {
                  "val": "#, Route, Method, Sample Json, Results",
                  "offset": 38
                }
              ],
              "location": "CheckDummyTableStepDefinitions.i_can_see_web_page_with_specified_columns(String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 129122500,
              "error_message": "java.lang.AssertionError: expected [/employee] but found [/employees]\r\n\tat org.testng.Assert.fail(Assert.java:94)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:513)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:135)\r\n\tat org.testng.Assert.assertEquals(Assert.java:116)\r\n\tat org.testng.Assert.assertEquals(Assert.java:190)\r\n\tat org.testng.Assert.assertEquals(Assert.java:200)\r\n\tat steps.CheckDummyTableStepDefinitions.the_text_in_Route_column_equals_to_Route_column_text_in_main_table(CheckDummyTableStepDefinitions.java:125)\r\n\tat âœ½.And the text in Route column equals to Route column text in main table(checkDummyTable.feature:16)\r\n",
              "status": "failed"
            },
            "line": 16,
            "name": "the text in Route column equals to Route column text in main table",
            "match": {
              "location": "CheckDummyTableStepDefinitions.the_text_in_Route_column_equals_to_Route_column_text_in_main_table()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 17,
            "name": "the text in Method column equals to Method column text in main table",
            "match": {
              "location": "CheckDummyTableStepDefinitions.the_text_in_Method_column_equals_to_Method_column_text_in_main_table()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@checkDummyTable"
          }
        ]
      },
      {
        "line": 22,
        "name": "Checking the table is present and consist of some columns names",
        "description": "",
        "id": "check-the-table;checking-the-table-is-present-and-consist-of-some-columns-names;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2661929400,
              "status": "passed"
            },
            "line": 12,
            "name": "I am on the Dummy sample rest api web page",
            "match": {
              "location": "CheckDummyTableStepDefinitions.openDummyMainPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3469736400,
              "status": "passed"
            },
            "line": 13,
            "name": "I click on Details link in \u0027Details\u0027 column on row with some \"Get a single employee data\"",
            "match": {
              "arguments": [
                {
                  "val": "Get a single employee data",
                  "offset": 62
                }
              ],
              "location": "CheckDummyTableStepDefinitions.i_click_on_Details_link_in_Details_column(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 27439100,
              "status": "passed"
            },
            "line": 14,
            "name": "the table with some examples is present",
            "match": {
              "location": "CheckDummyTableStepDefinitions.the_table_with_request_examples_is_present()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 339667200,
              "status": "passed"
            },
            "line": 15,
            "name": "the table contains specified columns \"#, Route, Method, Sample Json, Results\"",
            "match": {
              "arguments": [
                {
                  "val": "#, Route, Method, Sample Json, Results",
                  "offset": 38
                }
              ],
              "location": "CheckDummyTableStepDefinitions.i_can_see_web_page_with_specified_columns(String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 77127600,
              "error_message": "java.lang.AssertionError: expected [true] but found [false]\r\n\tat org.testng.Assert.fail(Assert.java:94)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:513)\r\n\tat org.testng.Assert.assertTrue(Assert.java:42)\r\n\tat org.testng.Assert.assertTrue(Assert.java:52)\r\n\tat steps.CheckDummyTableStepDefinitions.the_text_in_Route_column_equals_to_Route_column_text_in_main_table(CheckDummyTableStepDefinitions.java:121)\r\n\tat âœ½.And the text in Route column equals to Route column text in main table(checkDummyTable.feature:16)\r\n",
              "status": "failed"
            },
            "line": 16,
            "name": "the text in Route column equals to Route column text in main table",
            "match": {
              "location": "CheckDummyTableStepDefinitions.the_text_in_Route_column_equals_to_Route_column_text_in_main_table()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 17,
            "name": "the text in Method column equals to Method column text in main table",
            "match": {
              "location": "CheckDummyTableStepDefinitions.the_text_in_Method_column_equals_to_Method_column_text_in_main_table()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@checkDummyTable"
          }
        ]
      },
      {
        "line": 23,
        "name": "Checking the table is present and consist of some columns names",
        "description": "",
        "id": "check-the-table;checking-the-table-is-present-and-consist-of-some-columns-names;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3098361400,
              "status": "passed"
            },
            "line": 12,
            "name": "I am on the Dummy sample rest api web page",
            "match": {
              "location": "CheckDummyTableStepDefinitions.openDummyMainPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3510472500,
              "status": "passed"
            },
            "line": 13,
            "name": "I click on Details link in \u0027Details\u0027 column on row with some \"Create new record in database\"",
            "match": {
              "arguments": [
                {
                  "val": "Create new record in database",
                  "offset": 62
                }
              ],
              "location": "CheckDummyTableStepDefinitions.i_click_on_Details_link_in_Details_column(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 35136000,
              "status": "passed"
            },
            "line": 14,
            "name": "the table with some examples is present",
            "match": {
              "location": "CheckDummyTableStepDefinitions.the_table_with_request_examples_is_present()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 78376600,
              "error_message": "java.lang.AssertionError: expected [#] but found [Route]\r\n\tat org.testng.Assert.fail(Assert.java:94)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:513)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:135)\r\n\tat org.testng.Assert.assertEquals(Assert.java:116)\r\n\tat org.testng.Assert.assertEquals(Assert.java:190)\r\n\tat org.testng.Assert.assertEquals(Assert.java:200)\r\n\tat steps.CheckDummyTableStepDefinitions.i_can_see_web_page_with_specified_columns(CheckDummyTableStepDefinitions.java:72)\r\n\tat âœ½.And the table contains specified columns \"#, Route, Method, Sample Json, Results\"(checkDummyTable.feature:15)\r\n",
              "status": "failed"
            },
            "line": 15,
            "name": "the table contains specified columns \"#, Route, Method, Sample Json, Results\"",
            "match": {
              "arguments": [
                {
                  "val": "#, Route, Method, Sample Json, Results",
                  "offset": 38
                }
              ],
              "location": "CheckDummyTableStepDefinitions.i_can_see_web_page_with_specified_columns(String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 16,
            "name": "the text in Route column equals to Route column text in main table",
            "match": {
              "location": "CheckDummyTableStepDefinitions.the_text_in_Route_column_equals_to_Route_column_text_in_main_table()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 17,
            "name": "the text in Method column equals to Method column text in main table",
            "match": {
              "location": "CheckDummyTableStepDefinitions.the_text_in_Method_column_equals_to_Method_column_text_in_main_table()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@checkDummyTable"
          }
        ]
      },
      {
        "line": 24,
        "name": "Checking the table is present and consist of some columns names",
        "description": "",
        "id": "check-the-table;checking-the-table-is-present-and-consist-of-some-columns-names;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2621536500,
              "status": "passed"
            },
            "line": 12,
            "name": "I am on the Dummy sample rest api web page",
            "match": {
              "location": "CheckDummyTableStepDefinitions.openDummyMainPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3811472100,
              "status": "passed"
            },
            "line": 13,
            "name": "I click on Details link in \u0027Details\u0027 column on row with some \"Update an employee record\"",
            "match": {
              "arguments": [
                {
                  "val": "Update an employee record",
                  "offset": 62
                }
              ],
              "location": "CheckDummyTableStepDefinitions.i_click_on_Details_link_in_Details_column(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 26436800,
              "error_message": "java.lang.AssertionError: expected [false] but found [true]\r\n\tat org.testng.Assert.fail(Assert.java:94)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:513)\r\n\tat org.testng.Assert.assertFalse(Assert.java:63)\r\n\tat org.testng.Assert.assertFalse(Assert.java:73)\r\n\tat steps.CheckDummyTableStepDefinitions.the_table_with_request_examples_is_present(CheckDummyTableStepDefinitions.java:44)\r\n\tat âœ½.Then the table with some examples is present(checkDummyTable.feature:14)\r\n",
              "status": "failed"
            },
            "line": 14,
            "name": "the table with some examples is present",
            "match": {
              "location": "CheckDummyTableStepDefinitions.the_table_with_request_examples_is_present()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 15,
            "name": "the table contains specified columns \"#, Route, Method, Sample Json, Results\"",
            "match": {
              "arguments": [
                {
                  "val": "#, Route, Method, Sample Json, Results",
                  "offset": 38
                }
              ],
              "location": "CheckDummyTableStepDefinitions.i_can_see_web_page_with_specified_columns(String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 16,
            "name": "the text in Route column equals to Route column text in main table",
            "match": {
              "location": "CheckDummyTableStepDefinitions.the_text_in_Route_column_equals_to_Route_column_text_in_main_table()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 17,
            "name": "the text in Method column equals to Method column text in main table",
            "match": {
              "location": "CheckDummyTableStepDefinitions.the_text_in_Method_column_equals_to_Method_column_text_in_main_table()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@checkDummyTable"
          }
        ]
      },
      {
        "line": 25,
        "name": "Checking the table is present and consist of some columns names",
        "description": "",
        "id": "check-the-table;checking-the-table-is-present-and-consist-of-some-columns-names;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 5340550500,
              "status": "passed"
            },
            "line": 12,
            "name": "I am on the Dummy sample rest api web page",
            "match": {
              "location": "CheckDummyTableStepDefinitions.openDummyMainPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3565169600,
              "status": "passed"
            },
            "line": 13,
            "name": "I click on Details link in \u0027Details\u0027 column on row with some \"Delete an employee record\"",
            "match": {
              "arguments": [
                {
                  "val": "Delete an employee record",
                  "offset": 62
                }
              ],
              "location": "CheckDummyTableStepDefinitions.i_click_on_Details_link_in_Details_column(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 31707000,
              "status": "passed"
            },
            "line": 14,
            "name": "the table with some examples is present",
            "match": {
              "location": "CheckDummyTableStepDefinitions.the_table_with_request_examples_is_present()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 268684100,
              "status": "passed"
            },
            "line": 15,
            "name": "the table contains specified columns \"#, Route, Method, Sample Json, Results\"",
            "match": {
              "arguments": [
                {
                  "val": "#, Route, Method, Sample Json, Results",
                  "offset": 38
                }
              ],
              "location": "CheckDummyTableStepDefinitions.i_can_see_web_page_with_specified_columns(String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 44336900,
              "error_message": "java.lang.AssertionError: expected [true] but found [false]\r\n\tat org.testng.Assert.fail(Assert.java:94)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:513)\r\n\tat org.testng.Assert.assertTrue(Assert.java:42)\r\n\tat org.testng.Assert.assertTrue(Assert.java:52)\r\n\tat steps.CheckDummyTableStepDefinitions.the_text_in_Route_column_equals_to_Route_column_text_in_main_table(CheckDummyTableStepDefinitions.java:121)\r\n\tat âœ½.And the text in Route column equals to Route column text in main table(checkDummyTable.feature:16)\r\n",
              "status": "failed"
            },
            "line": 16,
            "name": "the text in Route column equals to Route column text in main table",
            "match": {
              "location": "CheckDummyTableStepDefinitions.the_text_in_Route_column_equals_to_Route_column_text_in_main_table()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 17,
            "name": "the text in Method column equals to Method column text in main table",
            "match": {
              "location": "CheckDummyTableStepDefinitions.the_text_in_Method_column_equals_to_Method_column_text_in_main_table()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@checkDummyTable"
          }
        ]
      }
    ],
    "name": "Check the table",
    "description": "",
    "id": "check-the-table",
    "keyword": "Feature",
    "uri": "checkDummyTable.feature",
    "tags": [
      {
        "line": 1,
        "name": "@checkDummyTable"
      }
    ]
  }
]